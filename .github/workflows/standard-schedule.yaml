name: Standard workflow for regularly scheduled jobs

permissions:
  contents: read

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      image:
        description: "Name of the image to scan with trivy"
        required: false
        default: "ghcr.io/${{ github.repository }}"
        type: string
      image-tag:
        description: "The image tag to scan with trivy"
        required: false
        default: "latest"
        type: string
    secrets:
      github-token:
        description: "The GitHub workflow token used to push to ghcr.io. Also used by MegaLinter"
        required: true

jobs:
  check-links:
    name: check links using lychee
    runs-on: ubuntu-22.04
    permissions:
      issues: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Restore lychee cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: .lycheecache
          key: cache-lychee-${{ github.sha }}
          restore-keys: cache-lychee-

      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@ec3ed119d4f44ad2673a7232460dc7dff59d2421 # v1.8.0
        with:
          args: "--cache --max-cache-age 3d ."
        env:
          GITHUB_TOKEN: ${{secrets.github-token}}

      - name: Look for an existing issue
        id: last-issue
        uses: micalevisk/last-issue-action@305829d9728f47beb0029417167a0af890edfd6e # v2.1.0
        with:
          state: open
          labels: lychee link check

      - name: Create Issue From File
        if: ${{ steps.lychee.outputs.exit_code != 0 }}
        uses: peter-evans/create-issue-from-file@433e51abf769039ee20ba1293a088ca19d573b7f # tag=v4.0.1
        with:
          title: Link Checker Report
          content-filepath: ./lychee/out.md
          issue-number: ${{ steps.last-issue.outputs.issue-number }}
          labels: report, automated issue, lychee link check

  trivy-scan:
    name: scan latest image with trivy
    runs-on: ubuntu-22.04
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@f78e9ecf42a1271402d4f484518b9313235990e1 # 0.13.1
        with:
          image-ref: "${{ inputs.image }}:${{ inputs.image-tag }}"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@74483a38d39275f33fcff5f35b679b5ca4a26a99 # v2.22.5
        with:
          sarif_file: "trivy-results.sarif"
