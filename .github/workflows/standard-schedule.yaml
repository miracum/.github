name: Standard workflow for regularly scheduled jobs

permissions:
  contents: read

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      images:
        description: "List of container images to scan with trivy"
        required: false
        type: string
        default: "['ghcr.io/${{ github.repository }}:latest']"
    secrets:
      github-token:
        description: "The GitHub workflow token used to push to ghcr.io. Also used by MegaLinter"
        required: true

env:
  TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
  TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db:1

jobs:
  check-links:
    name: check links using lychee
    runs-on: ubuntu-24.04
    permissions:
      issues: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Restore lychee cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: .lycheecache
          key: cache-lychee-${{ github.sha }}
          restore-keys: cache-lychee-

      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@885c65f3dc543b57c898c8099f4e08c8afd178a2 # v2.6.1
        with:
          args: "--cache --max-cache-age 3d ."
          failIfEmpty: false
        env:
          GITHUB_TOKEN: ${{secrets.github-token}}

      - name: Look for an existing issue
        id: last-issue
        uses: micalevisk/last-issue-action@0d40124cc99ac8601c2516007f0c98ef3d27537b # v2.3.0
        with:
          state: open
          labels: lychee link check

      - name: Create Issue From File
        if: ${{ steps.lychee.outputs.exit_code != 0 }}
        uses: peter-evans/create-issue-from-file@e8ef132d6df98ed982188e460ebb3b5d4ef3a9cd # v5.0.1
        with:
          title: Link Checker Report
          content-filepath: ./lychee/out.md
          issue-number: ${{ steps.last-issue.outputs.issue-number }}
          labels: report, automated issue, lychee link check

  trivy-scan:
    name: scan images with trivy
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        image: ${{ fromJSON(inputs.images) }}
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@f9424c10c36e288d5fa79bd3dfd1aeb2d6eae808 # 0.33.0
        with:
          image-ref: "${{ matrix.image }}"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@2d92b76c45b91eb80fc44c74ce3fce0ee94e8f9d # v3.30.0
        with:
          sarif_file: "trivy-results.sarif"
